{"version":3,"sources":["components/List.jsx","components/InputForm.jsx","components/Clock.jsx","App.js","reportWebVitals.js","index.js"],"names":["List","console","log","this","props","todos","toggleTodo","className","map","id","name","checked","type","onChange","for","React","Component","InputForm","state","inputText","handleInputTodo","value","target","setState","handleAddTodo","e","preventDefault","onAddTodo","placeholder","autoFocus","onClick","Clock","date","Date","timerID","setInterval","tick","clearInterval","toLocaleTimeString","App","bind","nextId","length","status","todo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.309378c3.chunk.js","sourcesContent":["import \"./List.scss\";\nimport React from \"react\";\n\nclass List extends React.Component {\n  render() {\n    console.log(this.props);\n    const { todos, toggleTodo } = this.props;\n    return (\n      <div className=\"list\">\n        <ul>\n          {todos.map(({ id, name, checked }) => {\n            return (\n              <li key={id}>\n                <span className={checked && \"done\"}>\n                  <input\n                    type=\"checkbox\"\n                    id={\"item\" + id}\n                    className=\"checkbox\"\n                    checked={checked}\n                    onChange={() => toggleTodo(id)}\n                  />\n                  <label for={\"item\" + id}>{name}</label>\n                </span>\n                <button className=\"btn btn-delete\">x</button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import \"./InputForm.scss\";\r\nimport React from \"react\";\r\n\r\nclass InputForm extends React.Component {\r\n  state = {\r\n    inputText: \"\",\r\n  };\r\n\r\n  handleInputTodo = ({ target: { value } }) => {\r\n    this.setState({\r\n      inputText: value,\r\n    });\r\n  };\r\n\r\n  handleAddTodo = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ inputText: \"\" });\r\n    this.props.onAddTodo(this.state.inputText);\r\n    console.log(this.state.inputText);\r\n  };\r\n\r\n  render() {\r\n    const { inputText } = this.state;\r\n    return (\r\n      <form className=\"inputForm\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"todoInput\"\r\n          placeholder=\"Enter item\"\r\n          value={inputText}\r\n          onChange={this.handleInputTodo}\r\n          autoFocus\r\n        />\r\n        <button onClick={this.handleAddTodo}>⏎</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputForm;\r\n","import React from \"react\";\r\n\r\nclass Clock extends React.Component {\r\n  state = { date: new Date() };\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.tick(), 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({ date: new Date() });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"clock\">\r\n        <p>{this.state.date.toLocaleTimeString()}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n","import \"./App.scss\";\r\nimport React from \"react\";\r\nimport List from \"./components/List\";\r\nimport InputForm from \"./components/InputForm\";\r\nimport Clock from \"./components/Clock\";\r\n\r\nconst appName = \"Todo App\";\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleAddTodo = this.handleAddTodo.bind(this);\r\n    this.toggleTodo = this.toggleTodo.bind(this);\r\n  }\r\n\r\n  state = {\r\n    todos: [\r\n      { id: 1, checked: false, name: \"Сделать зарядку\" },\r\n      { id: 2, checked: false, name: \"Приготовить обед\" },\r\n      { id: 3, checked: false, name: \"Поработать\" },\r\n    ],\r\n  };\r\n\r\n  handleAddTodo(value) {\r\n    let nextId = this.state.todos.length + 1;\r\n    this.setState({\r\n      todos: [{ id: nextId, name: value, status: false }, ...this.state.todos],\r\n    });\r\n  }\r\n\r\n  toggleTodo(id) {\r\n    this.setState({\r\n      todos: this.state.todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.checked = !todo.checked;\r\n        }\r\n        return todo;\r\n      }),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { todos } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>{appName}</h1>\r\n          <InputForm todos={todos} onAddTodo={this.handleAddTodo} />\r\n          <List todos={todos} toggleTodo={this.toggleTodo} />\r\n          <Clock />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}